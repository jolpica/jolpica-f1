# Generated by Django 4.2.10 on 2024-03-31 11:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ("ergast", "0001_initial"),
        ("ergast", "0002_auto_20210807_1826"),
        ("ergast", "0003_auto_20210807_1908"),
        ("ergast", "0004_alter_constructors_constructor_ref"),
        ("ergast", "0005_auto_20210807_2329"),
        ("ergast", "0006_auto_20210807_2331"),
        ("ergast", "0007_auto_20210808_0016"),
        ("ergast", "0008_auto_20210808_0107"),
        ("ergast", "0009_auto_20210808_0110"),
        ("ergast", "0010_auto_20210808_1052"),
        ("ergast", "0011_alter_pitstops_id"),
        ("ergast", "0012_auto_20210814_2034"),
        ("ergast", "0013_alter_drivers_code"),
        ("ergast", "0014_auto_20230924_2047"),
        ("ergast", "0015_sprintresults"),
    ]

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Circuits",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="circuitId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary Key",
                    ),
                ),
                (
                    "circuit_ref",
                    models.CharField(
                        db_column="circuitRef",
                        max_length=255,
                        unique=True,
                        verbose_name="Unique circuit identifier",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Circuit name")),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Location name"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Country"
                    ),
                ),
                (
                    "lat",
                    models.FloatField(blank=True, null=True, verbose_name="Latitude"),
                ),
                (
                    "lng",
                    models.FloatField(blank=True, null=True, verbose_name="Longitude"),
                ),
                (
                    "alt",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Altitude (metres)"
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Circuit Wikipedia page",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Constructors",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="constructorId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary Key",
                    ),
                ),
                (
                    "constructor_ref",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        verbose_name="Unique constructor identifier",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Constructor name"),
                ),
                (
                    "nationality",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Constructor nationality",
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Constructor Wikipedia page",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Drivers",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="driverId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary Key",
                    ),
                ),
                (
                    "driver_ref",
                    models.CharField(
                        db_column="driverRef",
                        max_length=255,
                        verbose_name="Unique driver identifier",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Permanent driver number"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=3, verbose_name='Driver code e.g. "ALO"'
                    ),
                ),
                (
                    "forename",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Driver forename"
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Driver surname"
                    ),
                ),
                (
                    "dob",
                    models.DateField(
                        blank=True, null=True, verbose_name="Driver date of birth"
                    ),
                ),
                (
                    "nationality",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Driver nationality"
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Constructor Wikipedia page",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LapTimes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lap", models.IntegerField(verbose_name="Lap number")),
                (
                    "position",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Driver race position"
                    ),
                ),
                (
                    "time",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name='Lap time e.g. "1:43.762"',
                    ),
                ),
                (
                    "milliseconds",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lap time in milliseconds"
                    ),
                ),
                (
                    "driver_id",
                    models.ForeignKey(
                        db_column="driverId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.drivers",
                        verbose_name="Foreign key link to drivers table",
                    ),
                ),
            ],
            options={
                "db_table": "lap_times",
            },
        ),
        migrations.CreateModel(
            name="PitStops",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Qualifying",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Results",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seasons",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(verbose_name="Primary key e.g. 1950")),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Season Wikipedia page",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Races",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="raceId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary Key",
                    ),
                ),
                ("round", models.IntegerField(verbose_name="Round number")),
                ("name", models.CharField(max_length=255, verbose_name="Race name")),
                ("date", models.DateField(verbose_name='Race date e.g. "1950-05-13"')),
                (
                    "time",
                    models.TimeField(
                        blank=True,
                        null=True,
                        verbose_name='Race start time e.g."13:00:00"',
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Race Wikipedia page",
                    ),
                ),
                (
                    "circuit_id",
                    models.ForeignKey(
                        db_column="circuitId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.circuits",
                        verbose_name="Foreign key link to circuits table",
                    ),
                ),
                (
                    "lap_times",
                    models.ManyToManyField(
                        through="ergast.LapTimes", to="ergast.drivers"
                    ),
                ),
                (
                    "year",
                    models.ForeignKey(
                        db_column="year",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.seasons",
                        verbose_name="Foreign key link to seasons table",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="laptimes",
            name="race_id",
            field=models.ForeignKey(
                db_column="raceId",
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.races",
                verbose_name="Foreign key link to races table",
            ),
        ),
        migrations.CreateModel(
            name="DriverStandings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="driverStandingsId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary Key",
                    ),
                ),
                ("points", models.FloatField(verbose_name="Driver points for season")),
                (
                    "position",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Driver standings position (integer)",
                    ),
                ),
                (
                    "position_text",
                    models.CharField(
                        blank=True,
                        db_column="positionText",
                        max_length=255,
                        null=True,
                        verbose_name="Driver standings position (string)",
                    ),
                ),
                ("wins", models.IntegerField(verbose_name="Season win count")),
                (
                    "driver_id",
                    models.ForeignKey(
                        db_column="driverId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.drivers",
                        verbose_name="Foreign key link to drivers table",
                    ),
                ),
                (
                    "race_id",
                    models.ForeignKey(
                        db_column="raceId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.races",
                        verbose_name="Foreign key link to races table",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConstructorStandings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="constructorStandingsId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary Key",
                    ),
                ),
                (
                    "points",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Constructor points for season",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Constructor standings position (integer)",
                    ),
                ),
                (
                    "position_text",
                    models.CharField(
                        blank=True,
                        db_column="positionText",
                        max_length=255,
                        null=True,
                        verbose_name="Constructor standings position (string)",
                    ),
                ),
                ("wins", models.IntegerField(verbose_name="Season win count")),
                (
                    "constructor_id",
                    models.ForeignKey(
                        db_column="constructorId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.constructors",
                        verbose_name="Foreign key link to constructors table",
                    ),
                ),
                (
                    "race_id",
                    models.ForeignKey(
                        db_column="raceId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.races",
                        verbose_name="Foreign key link to races table",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConstructorResults",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="constructorResultsId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary Key",
                    ),
                ),
                (
                    "points",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Constructor points for season",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name='"D" for disqualified (or null)',
                    ),
                ),
                (
                    "constructor_id",
                    models.ForeignKey(
                        db_column="constructorId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.constructors",
                        verbose_name="Foreign key link to constructors table",
                    ),
                ),
                (
                    "race_id",
                    models.ForeignKey(
                        db_column="raceId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.races",
                        verbose_name="Foreign key link to races table",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="laptimes",
            constraint=models.UniqueConstraint(
                fields=("race_id", "driver_id", "lap"), name="unique_lap_time"
            ),
        ),
        migrations.AddField(
            model_name="pitstops",
            name="driver_id",
            field=models.ForeignKey(
                db_column="driverId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.drivers",
                verbose_name="Foreign key link to drivers table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="pitstops",
            name="duration",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name='Duration of stop e.g. "21.783"',
            ),
        ),
        migrations.AddField(
            model_name="pitstops",
            name="lap",
            field=models.IntegerField(default=0, verbose_name="Lap number"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="pitstops",
            name="milliseconds",
            field=models.IntegerField(
                blank=True, null=True, verbose_name="Duration of stop in milliseconds"
            ),
        ),
        migrations.AddField(
            model_name="pitstops",
            name="race_id",
            field=models.ForeignKey(
                db_column="raceId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.races",
                verbose_name="Foreign key link to races table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="pitstops",
            name="stop",
            field=models.IntegerField(default=0, verbose_name="Stop number"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="pitstops",
            name="time",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name='Time of stop e.g. "13:52:25"',
            ),
        ),
        migrations.AddField(
            model_name="qualifying",
            name="constructor_id",
            field=models.ForeignKey(
                db_column="constructorId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.constructors",
                verbose_name="Foreign key link to constructors table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="qualifying",
            name="driver_id",
            field=models.ForeignKey(
                db_column="driverId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.drivers",
                verbose_name="Foreign key link to drivers table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="qualifying",
            name="number",
            field=models.IntegerField(default=0, verbose_name="Driver number"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="qualifying",
            name="position",
            field=models.IntegerField(
                blank=True, null=True, verbose_name="Qualifying position"
            ),
        ),
        migrations.AddField(
            model_name="qualifying",
            name="q1",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name='Q1 lap time e.g. "1:21.374"',
            ),
        ),
        migrations.AddField(
            model_name="qualifying",
            name="q2",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Q2 lap time"
            ),
        ),
        migrations.AddField(
            model_name="qualifying",
            name="q3",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Q3 lap time"
            ),
        ),
        migrations.AddField(
            model_name="qualifying",
            name="race_id",
            field=models.ForeignKey(
                db_column="raceId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.races",
                verbose_name="Foreign key link to races table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="races",
            name="pit_stops",
            field=models.ManyToManyField(
                related_name="pit_stops", through="ergast.PitStops", to="ergast.drivers"
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="constructor_id",
            field=models.ForeignKey(
                db_column="constructorId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.constructors",
                verbose_name="Foreign key link to constructors table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="driver_id",
            field=models.ForeignKey(
                db_column="driverId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.drivers",
                verbose_name="Foreign key link to drivers table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="fastest_lap",
            field=models.IntegerField(
                blank=True,
                db_column="fastestLap",
                null=True,
                verbose_name="Lap number of fastest lap",
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="fastest_lap_speed",
            field=models.CharField(
                blank=True,
                db_column="fastestLapSpeed",
                max_length=255,
                null=True,
                verbose_name='Fastest lap speed (km/h) e.g. "213.874"',
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="fastest_lap_time",
            field=models.CharField(
                blank=True,
                db_column="fastestLapTime",
                max_length=255,
                null=True,
                verbose_name='Fastest lap time e.g. "1:27.453"',
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="grid",
            field=models.IntegerField(default=0, verbose_name="Starting grid position"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="laps",
            field=models.IntegerField(
                default=0, verbose_name="Number of completed laps"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="milliseconds",
            field=models.IntegerField(
                blank=True, null=True, verbose_name="Finishing time in milliseconds"
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="number",
            field=models.IntegerField(
                blank=True, null=True, verbose_name="Driver number"
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="points",
            field=models.FloatField(default=0, verbose_name="Driver points for race"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="position",
            field=models.IntegerField(
                blank=True,
                null=True,
                verbose_name="Official classification, if applicable",
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="position_order",
            field=models.IntegerField(
                db_column="positionOrder",
                default=0,
                verbose_name="Driver position for ordering purposes",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="position_text",
            field=models.CharField(
                blank=True,
                db_column="positionText",
                max_length=255,
                verbose_name='Driver position string e.g. "1" or "R"',
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="race_id",
            field=models.ForeignKey(
                db_column="raceId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.races",
                verbose_name="Foreign key link to races table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="rank",
            field=models.IntegerField(
                blank=True,
                null=True,
                verbose_name="Fastest lap rank, compared to other drivers",
            ),
        ),
        migrations.AddField(
            model_name="results",
            name="status_id",
            field=models.ForeignKey(
                db_column="statusId",
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                to="ergast.status",
                verbose_name="Foreign key link to status table",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="results",
            name="time",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name="Finishing time or gap",
            ),
        ),
        migrations.AddField(
            model_name="status",
            name="status",
            field=models.CharField(
                default=0,
                max_length=255,
                verbose_name='Finishing status e.g. "Retired"',
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="qualifying",
            name="id",
            field=models.AutoField(
                db_column="qualifyId",
                primary_key=True,
                serialize=False,
                verbose_name="Primary key",
            ),
        ),
        migrations.AlterField(
            model_name="races",
            name="lap_times",
            field=models.ManyToManyField(
                related_name="lap_times", through="ergast.LapTimes", to="ergast.drivers"
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="id",
            field=models.AutoField(
                db_column="resultId",
                primary_key=True,
                serialize=False,
                verbose_name="Primary key",
            ),
        ),
        migrations.AlterField(
            model_name="status",
            name="id",
            field=models.AutoField(
                primary_key=True, serialize=False, verbose_name="Primary key"
            ),
        ),
        migrations.AddConstraint(
            model_name="pitstops",
            constraint=models.UniqueConstraint(
                fields=("race_id", "driver_id", "stop"), name="unique_pit_stop"
            ),
        ),
        migrations.AlterModelTable(
            name="circuits",
            table="ergast_circuits",
        ),
        migrations.AlterModelTable(
            name="constructorresults",
            table="ergast_constructor_results",
        ),
        migrations.AlterModelTable(
            name="constructors",
            table="ergast_constructors",
        ),
        migrations.AlterModelTable(
            name="constructorstandings",
            table="ergast_constructor_standings",
        ),
        migrations.AlterModelTable(
            name="drivers",
            table="ergast_drivers",
        ),
        migrations.AlterModelTable(
            name="driverstandings",
            table="ergast_driver_standings",
        ),
        migrations.AlterModelTable(
            name="laptimes",
            table="ergast_lap_times",
        ),
        migrations.AlterModelTable(
            name="pitstops",
            table="ergast_pit_stops",
        ),
        migrations.AlterModelTable(
            name="qualifying",
            table="ergast_qualifying",
        ),
        migrations.AlterModelTable(
            name="races",
            table="ergast_races",
        ),
        migrations.AlterModelTable(
            name="results",
            table="ergast_results",
        ),
        migrations.AlterModelTable(
            name="seasons",
            table="ergast_seasons",
        ),
        migrations.AlterModelTable(
            name="status",
            table="ergast_status",
        ),
        migrations.AlterField(
            model_name="constructors",
            name="constructor_ref",
            field=models.CharField(
                db_column="constructorRef",
                max_length=255,
                unique=True,
                verbose_name="Unique constructor identifier",
            ),
        ),
        migrations.RenameField(
            model_name="circuits",
            old_name="id",
            new_name="circuitId",
        ),
        migrations.RenameField(
            model_name="circuits",
            old_name="circuit_ref",
            new_name="circuitRef",
        ),
        migrations.RenameField(
            model_name="constructorresults",
            old_name="constructor_id",
            new_name="constructorId",
        ),
        migrations.RenameField(
            model_name="constructorresults",
            old_name="id",
            new_name="constructorResultsId",
        ),
        migrations.RenameField(
            model_name="constructorresults",
            old_name="race_id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="constructors",
            old_name="id",
            new_name="constructorId",
        ),
        migrations.RenameField(
            model_name="constructors",
            old_name="constructor_ref",
            new_name="constructorRef",
        ),
        migrations.RenameField(
            model_name="constructorstandings",
            old_name="constructor_id",
            new_name="constructorId",
        ),
        migrations.RenameField(
            model_name="constructorstandings",
            old_name="id",
            new_name="constructorStandingsId",
        ),
        migrations.RenameField(
            model_name="constructorstandings",
            old_name="position_text",
            new_name="positionText",
        ),
        migrations.RenameField(
            model_name="constructorstandings",
            old_name="race_id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="drivers",
            old_name="id",
            new_name="driverId",
        ),
        migrations.RenameField(
            model_name="drivers",
            old_name="driver_ref",
            new_name="driverRef",
        ),
        migrations.RenameField(
            model_name="driverstandings",
            old_name="driver_id",
            new_name="driverId",
        ),
        migrations.RenameField(
            model_name="driverstandings",
            old_name="id",
            new_name="driverStandingsId",
        ),
        migrations.RenameField(
            model_name="driverstandings",
            old_name="position_text",
            new_name="positionText",
        ),
        migrations.RenameField(
            model_name="driverstandings",
            old_name="race_id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="laptimes",
            old_name="driver_id",
            new_name="driverId",
        ),
        migrations.RenameField(
            model_name="laptimes",
            old_name="race_id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="pitstops",
            old_name="driver_id",
            new_name="driverId",
        ),
        migrations.RenameField(
            model_name="pitstops",
            old_name="race_id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="qualifying",
            old_name="constructor_id",
            new_name="constructorId",
        ),
        migrations.RenameField(
            model_name="qualifying",
            old_name="driver_id",
            new_name="driverId",
        ),
        migrations.RenameField(
            model_name="qualifying",
            old_name="id",
            new_name="qualifyId",
        ),
        migrations.RenameField(
            model_name="qualifying",
            old_name="race_id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="races",
            old_name="circuit_id",
            new_name="circuitId",
        ),
        migrations.RenameField(
            model_name="races",
            old_name="id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="constructor_id",
            new_name="constructorId",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="driver_id",
            new_name="driverId",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="fastest_lap",
            new_name="fastestLap",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="fastest_lap_speed",
            new_name="fastestLapSpeed",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="fastest_lap_time",
            new_name="fastestLapTime",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="position_order",
            new_name="positionOrder",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="position_text",
            new_name="positionText",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="race_id",
            new_name="raceId",
        ),
        migrations.RenameField(
            model_name="results",
            old_name="status_id",
            new_name="statusId",
        ),
        migrations.AlterField(
            model_name="constructors",
            name="url",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name="Constructor Wikipedia page",
            ),
        ),
        migrations.RemoveConstraint(
            model_name="laptimes",
            name="unique_lap_time",
        ),
        migrations.RemoveConstraint(
            model_name="pitstops",
            name="unique_pit_stop",
        ),
        migrations.AddConstraint(
            model_name="laptimes",
            constraint=models.UniqueConstraint(
                fields=("raceId", "driverId", "lap"), name="unique_lap_time"
            ),
        ),
        migrations.AddConstraint(
            model_name="pitstops",
            constraint=models.UniqueConstraint(
                fields=("raceId", "driverId", "stop"), name="unique_pit_stop"
            ),
        ),
        migrations.AlterField(
            model_name="laptimes",
            name="id",
            field=models.CharField(
                max_length=255,
                primary_key=True,
                serialize=False,
                verbose_name="Unique id from foreign key concatenation",
            ),
        ),
        migrations.AlterField(
            model_name="pitstops",
            name="id",
            field=models.CharField(
                max_length=255,
                primary_key=True,
                serialize=False,
                verbose_name="Unique id from foreign key concatenation",
            ),
        ),
        migrations.RenameField(
            model_name="results",
            old_name="id",
            new_name="resultId",
        ),
        migrations.RemoveField(
            model_name="seasons",
            name="id",
        ),
        migrations.AlterField(
            model_name="seasons",
            name="year",
            field=models.IntegerField(
                primary_key=True, serialize=False, verbose_name="Primary key e.g. 1950"
            ),
        ),
        migrations.RenameField(
            model_name="status",
            old_name="id",
            new_name="statusId",
        ),
        migrations.AlterField(
            model_name="laptimes",
            name="id",
            field=models.CharField(
                max_length=255,
                primary_key=True,
                serialize=False,
                verbose_name="Unique id '<raceId>|<driverId>|<lap>'",
            ),
        ),
        migrations.AlterField(
            model_name="status",
            name="statusId",
            field=models.AutoField(
                db_column="statusId",
                primary_key=True,
                serialize=False,
                verbose_name="Primary key",
            ),
        ),
        migrations.AlterField(
            model_name="pitstops",
            name="id",
            field=models.CharField(
                max_length=255,
                primary_key=True,
                serialize=False,
                verbose_name="Unique id '<raceId>|<driverId>|<stop>'",
            ),
        ),
        migrations.AlterModelOptions(
            name="circuits",
            options={"ordering": ["circuitRef"]},
        ),
        migrations.AlterModelOptions(
            name="races",
            options={"ordering": ["year", "round"]},
        ),
        migrations.AlterField(
            model_name="drivers",
            name="code",
            field=models.CharField(
                blank=True,
                max_length=3,
                null=True,
                verbose_name='Driver code e.g. "ALO"',
            ),
        ),
        migrations.AddField(
            model_name="races",
            name="fp1_date",
            field=models.DateField(blank=True, null=True, verbose_name="FP1 date"),
        ),
        migrations.AddField(
            model_name="races",
            name="fp1_time",
            field=models.TimeField(
                blank=True, null=True, verbose_name="FP1 start time"
            ),
        ),
        migrations.AddField(
            model_name="races",
            name="fp2_date",
            field=models.DateField(blank=True, null=True, verbose_name="FP2 date"),
        ),
        migrations.AddField(
            model_name="races",
            name="fp2_time",
            field=models.TimeField(
                blank=True, null=True, verbose_name="FP2 start time"
            ),
        ),
        migrations.AddField(
            model_name="races",
            name="fp3_date",
            field=models.DateField(blank=True, null=True, verbose_name="FP3 date"),
        ),
        migrations.AddField(
            model_name="races",
            name="fp3_time",
            field=models.TimeField(
                blank=True, null=True, verbose_name="FP3 start time"
            ),
        ),
        migrations.AddField(
            model_name="races",
            name="quali_date",
            field=models.DateField(
                blank=True, null=True, verbose_name="Qualifying date"
            ),
        ),
        migrations.AddField(
            model_name="races",
            name="quali_time",
            field=models.TimeField(
                blank=True, null=True, verbose_name="Qualifying start time"
            ),
        ),
        migrations.AddField(
            model_name="races",
            name="sprint_date",
            field=models.DateField(blank=True, null=True, verbose_name="Sprint date"),
        ),
        migrations.AddField(
            model_name="races",
            name="sprint_time",
            field=models.TimeField(
                blank=True, null=True, verbose_name="Sprint start time"
            ),
        ),
        migrations.CreateModel(
            name="SprintResults",
            fields=[
                (
                    "resultId",
                    models.AutoField(
                        db_column="resultId",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Primary key",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Driver number"
                    ),
                ),
                ("grid", models.IntegerField(verbose_name="Starting grid position")),
                (
                    "position",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Official classification, if applicable",
                    ),
                ),
                (
                    "positionText",
                    models.CharField(
                        blank=True,
                        db_column="positionText",
                        max_length=255,
                        verbose_name='Driver position string e.g. "1" or "R"',
                    ),
                ),
                (
                    "positionOrder",
                    models.IntegerField(
                        db_column="positionOrder",
                        verbose_name="Driver position for ordering purposes",
                    ),
                ),
                ("points", models.FloatField(verbose_name="Driver points for race")),
                ("laps", models.IntegerField(verbose_name="Number of completed laps")),
                (
                    "time",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Finishing time or gap",
                    ),
                ),
                (
                    "milliseconds",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Finishing time in milliseconds",
                    ),
                ),
                (
                    "fastestLap",
                    models.IntegerField(
                        blank=True,
                        db_column="fastestLap",
                        null=True,
                        verbose_name="Lap number of fastest lap",
                    ),
                ),
                (
                    "fastestLapTime",
                    models.CharField(
                        blank=True,
                        db_column="fastestLapTime",
                        max_length=255,
                        null=True,
                        verbose_name='Fastest lap time e.g. "1:27.453"',
                    ),
                ),
                (
                    "constructorId",
                    models.ForeignKey(
                        db_column="constructorId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.constructors",
                        verbose_name="Foreign key link to constructors table",
                    ),
                ),
                (
                    "driverId",
                    models.ForeignKey(
                        db_column="driverId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.drivers",
                        verbose_name="Foreign key link to drivers table",
                    ),
                ),
                (
                    "raceId",
                    models.ForeignKey(
                        db_column="raceId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.races",
                        verbose_name="Foreign key link to races table",
                    ),
                ),
                (
                    "statusId",
                    models.ForeignKey(
                        db_column="statusId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ergast.status",
                        verbose_name="Foreign key link to status table",
                    ),
                ),
            ],
            options={
                "db_table": "ergast_sprint_results",
            },
        ),
    ]
