# Generated by Django 5.2.5 on 2025-09-30 21:21

import secrets
import string

from django.db import migrations, models


def generate_api_id(model_prefix: str) -> str:
    """Generate unique API ID with format: {lowercaseletters}_{8_alphanumeric}"""
    alphabet = string.ascii_letters + string.digits
    random_suffix = "".join(secrets.choice(alphabet) for _ in range(8))
    return f"{model_prefix}_{random_suffix}"


def populate_api_ids(apps, schema_editor):
    """Populate api_id for all existing records using bulk operations"""
    # Map model names to their ID_PREFIX values
    # Note: These must be hardcoded in migrations for reproducibility,
    # even though the actual models define these as class attributes
    model_prefixes = {
        "BaseTeam": "baseteam",
        "Circuit": "circuit",
        "Driver": "driver",
        "Season": "season",
        "Team": "team",
        "TeamDriver": "teamdriver",
        "Round": "round",
        "RoundEntry": "roundentry",
        "Session": "session",
        "SessionEntry": "sessionentry",
        "Penalty": "penalty",
        "Lap": "lap",
        "PitStop": "pitstop",
        "PointSystem": "pointsystem",
        "ChampionshipSystem": "championshipsystem",
        "ChampionshipAdjustment": "championshipadjustment",
    }


    for model_name, prefix in model_prefixes.items():
        Model = apps.get_model("formula_one", model_name)

        pks = Model.objects.filter(api_id__isnull=True).values_list("pk", flat=True).all()
        updated_models = (Model(pk=pk, api_id=generate_api_id(prefix)) for pk in pks)

        Model.objects.bulk_update(updated_models, ["api_id"], batch_size=5000)


def clear_api_ids(apps, schema_editor):
    """Clear api_id for all records (reverse operation)"""
    model_names = [
        "BaseTeam",
        "Circuit",
        "Driver",
        "Season",
        "Team",
        "TeamDriver",
        "Round",
        "RoundEntry",
        "Session",
        "SessionEntry",
        "Penalty",
        "Lap",
        "PitStop",
        "PointSystem",
        "ChampionshipSystem",
        "ChampionshipAdjustment",
    ]

    for model_name in model_names:
        Model = apps.get_model("formula_one", model_name)
        Model.objects.all().update(api_id=None)


class Migration(migrations.Migration):
    dependencies = [
        ("formula_one", "0005_add_api_id_field"),
    ]

    operations = [
        migrations.RunPython(populate_api_ids, clear_api_ids),
        migrations.AlterField(
            model_name="baseteam",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="circuit",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="driver",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="season",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="team",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="teamdriver",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="round",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="roundentry",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="session",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="sessionentry",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="penalty",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="lap",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="pitstop",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="pointsystem",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="championshipsystem",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name="championshipadjustment",
            name="api_id",
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
    ]
