[tool.poetry]
authors = ["jolpica <no-reply@jolpi.ca>"]
description = ""
exclude = ["**/tests"]
name = "jolpica"
packages = [{ include = "jolpica" }]
version = "0.1.0"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"

Django = "^4.2.11"
django-environ = "^0.11.2"
django-ratelimit = "^4.1.0"
django-redis = "^5.4.0"
django-rest-knox = "^4.2.0"
django-storages = "^1.14.2"
djangorestframework = "^3.14.0"
gunicorn = "^22.0.0"
psycopg = "^3.1.12"
requests = "^2.31.0"
uvicorn = "^0.29"

[tool.poetry.group.dev.dependencies]
django-dbml = "^0.6.0"                                                            # Generation of dbml file
django-debug-toolbar = "^4.3.0"
django-fixture-magic = "^0.1.5"                                                   # Generation of fixture file
django-stubs = { extras = ["compatible-mypy"], version = "^4.2.6" }
djangorestframework-stubs = { extras = ["compatible-mypy"], version = "^3.14.3" }
mypy = { extras = ["dmypy"], version = "^1.7.0" }
pytest-django = "^4.5.2"
ruff = ">=0.4.3"

[tool.poetry.group.local.dependencies]
# Only for local development e.g. Jupyter notebook
ipykernel = "^6.25.2"
jupyter = "^1.0.0"
notebook = "^7.0.6"

[tool.poetry.group.import.dependencies]
# Only used in import scripts
pandas = "^2.1.1"
tqdm = "^4.66.3"


[tool.poetry.group.deploy.dependencies]
boto3 = "^1.34.11" # For upload via collectstatic with django-storages

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.mypy]
exclude = ["^tests", "^jolpica_api/ergastapi/*"]
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]
python_version = "3.11"

[tool.django-stubs]
django_settings_module = "jolpica_api.settings"


[tool.ruff]
extend-exclude = ["**/migrations", "jolpica/ergast/*"]
line-length = 120
src = ["jolpica", "jolpica_api"]
target-version = "py310"

[tool.ruff.lint]
ignore = ["TRY300", "TRY003", "RUF012"]
isort.known-first-party = ["jolpica", "jolpica_api"]
select = [
    "RUF", # Ruff specific
    "I",   # isort - Import sorting
    "S",   # Bandit - Security Report
    "F",   # Pyflakes - Error Checker
    "E",   # Pycodestyle - Style Checker
    "UP",  # Pyupgrade - Update Old Syntax
    "N",   # pep8-naming - Naming Conventions
    "TRY", # Tryceratops - Try Except Checking
]

pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/tests/*.py" = ["D", "S", "E501"]


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
addopts = ["--reuse-db"]
